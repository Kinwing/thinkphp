<?php 
// +----------------------------------------------------------------------+
// | ThinkPHP                                                             |
// +----------------------------------------------------------------------+
// | Copyright (c) 2006 liu21st.com All rights reserved.                  |
// +----------------------------------------------------------------------+
// | Licensed under the Apache License, Version 2.0 (the 'License');      |
// | you may not use this file except in compliance with the License.     |
// | You may obtain a copy of the License at                              |
// | http://www.apache.org/licenses/LICENSE-2.0                           |
// | Unless required by applicable law or agreed to in writing, software  |
// | distributed under the License is distributed on an 'AS IS' BASIS,    |
// | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or      |
// | implied. See the License for the specific language governing         |
// | permissions and limitations under the License.                       |
// +----------------------------------------------------------------------+
// | Author: liu21st <liu21st@gmail.com>                                  |
// +----------------------------------------------------------------------+
// $Id$

/**
 +------------------------------------------------------------------------------
 * 系统基类
 +------------------------------------------------------------------------------
 * @package   core
 * @author    liu21st <liu21st@gmail.com>
 * @version   $Id$
 +------------------------------------------------------------------------------
 */
class Base
{

    /**
     +----------------------------------------------------------
     * 支持PHP4和PHP5的构造方法
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     */
    function Base()
    {
        if(version_compare(PHP_VERSION, '5.0.0', '<')){
            //让PHP4支持__construct和__destruct
            $args = func_get_args();
            if (method_exists($this, '__destruct'))
            {
               register_shutdown_function(array(&$this, '__destruct'));
            }
            if (method_exists($this, '__construct'))
                call_user_func_array(array(&$this, '__construct'), $args);
        }
    }

    /**
     +----------------------------------------------------------
     * 自动变量设置 PHP5支持
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @param $name 属性名称
     * @param $value  属性值
     +----------------------------------------------------------
     */
    function __set($name ,$value)
    {
        if(property_exists($this,$name)){
            $this->$name = $value;
        }
    }

    /**
     +----------------------------------------------------------
     * 自动变量获取 支持PHP5
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @param $name 属性名称
     +----------------------------------------------------------
     * @return mixed
     +----------------------------------------------------------
     */
    function __get($name)
    {
        if(property_exists($this,$name)){
            return $this->$name;
        }else {
            return null;
        }
    }

    /**
     +----------------------------------------------------------
     * 对象属性赋值
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @param $name 属性名称
     * @param $value  属性值
     +----------------------------------------------------------
     */
    function set($name ,$value)
    {
        $this->__set($name,$value);
    }

    /**
     +----------------------------------------------------------
     * 对象属性获取
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @param $name 属性名称
     +----------------------------------------------------------
     * @return mixed
     +----------------------------------------------------------
     */
    function get($name)
    {
        return $this->__get($name);
    }

    /**
     +----------------------------------------------------------
     * 返回对象的属性列表
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @return array
     +----------------------------------------------------------
     */
    function __varList()
    {
      return array_keys(get_object_vars($this));
    }

    /**
     +----------------------------------------------------------
     * 返回对象的属性数组
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @return array
     +----------------------------------------------------------
     */
    function __toArray()
    {
      return get_object_vars($this);
    }

    /**
     +----------------------------------------------------------
     * 返回对象初始化的属性数组
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @return array
     +----------------------------------------------------------
     */
    function __toOraArray()
    {
      return get_class_vars(get_class($this));
    }

    /**
     +----------------------------------------------------------
     * 返回对象的类名
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @return string
     +----------------------------------------------------------
     */
    function __toString()
    {
      return ucwords(get_class($this));
    }

    /**
     +----------------------------------------------------------
     * 返回对象属性数目
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @return string
     +----------------------------------------------------------
     */
    function __count()
    {
      return count(get_object_vars($this));
    }

    /**
     +----------------------------------------------------------
     * 缓存调用类的方法
     * 
     +----------------------------------------------------------
     * @static
     * @access public 
     +----------------------------------------------------------
     * @return mixed
     +----------------------------------------------------------
     */
    function __cacheCall(){
        static $_cacheFunction = array();
        $args   = func_get_args();
        $method = array_shift($args);
        $str    = md5($args);
        if(!isset($_cacheFunction[$str])){
            $_cacheFunction[$str] = call_user_func_array(array(&$this, $method), $args);
        }
        return $_cacheFunction[$str];
    }

}//类定义结束
?>