<?php 
// +---------------------------------------------------------------------------+
// | FCS -- Fast,Compatible & Simple OOP PHP Framework                         |
// +---------------------------------------------------------------------------+
// | Copyright (c) 2005-2006 liu21st.com.  All rights reserved.                |
// | Website: http://www.fcs.org.cn/                                           |
// | Author : Liu21st 流年 <liu21st@gmail.com>                                 |
// +---------------------------------------------------------------------------+
// | This program is free software; you can redistribute it and/or modify it   |
// | under the terms of the GNU General Public License as published by the     |
// | Free Software Foundation; either version 2 of the License,  or (at your   |
// | option) any later version.                                                |
// |                                                                           |
// | This program is distributed in the hope that it will be useful,  but      |
// | WITHOUT ANY WARRANTY; without even the implied warranty of                |
// | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General |
// | Public License for more details.                                          |
// +---------------------------------------------------------------------------+

/**
 +------------------------------------------------------------------------------
 * FCS
 +------------------------------------------------------------------------------
 * @package    Util
 * @link       http://www.fcs.org.cn
 * @copyright  Copyright (c) 2005-2006 liu21st.com.  All rights reserved. 
 * @author     liu21st <liu21st@gmail.com>
 * @version    $Id$
 +------------------------------------------------------------------------------
 */

/**
 +------------------------------------------------------------------------------
 * Iterator接口实现类 PHP5中实现了Iterator接口
 +------------------------------------------------------------------------------
 * @package   Util
 * @author    liu21st <liu21st@gmail.com>
 * @version   0.8.0
 +------------------------------------------------------------------------------
 */
class ListIterator extends Base implements Iterator
{//类定义开始

    /**
     +----------------------------------------------------------
     * 元素集合
     +----------------------------------------------------------
     * @var array
     * @access protected
     +----------------------------------------------------------
     */
    var $_values = array();

    /**
     +----------------------------------------------------------
     * 当前指针位置
     +----------------------------------------------------------
     * @var integer
     * @access protected
     +----------------------------------------------------------
     */
    var $_index;

    /**
     +----------------------------------------------------------
     * 当前指针有效性
     +----------------------------------------------------------
     * @var boolen
     * @access protected
     +----------------------------------------------------------
     */
    var $_valid = True;


    /**
     +----------------------------------------------------------
     * 架构函数  
     * 初始化数组元素 并初始化指针位置
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @param array $values  初始化数组元素
     +----------------------------------------------------------
     */
    function __construct(&$values)
    {
        if (is_array($values)) {
            $this->_values = &$values;
        }
        $this->_index = 0;
    }

    /**
     +----------------------------------------------------------
     * 当前元素
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @return mixed
     +----------------------------------------------------------
     */
    function current()
    {
        return current($this->_values); 
    }

    /**
     +----------------------------------------------------------
     * 当前元素键名，没有键名返回索引
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @return mixed
     +----------------------------------------------------------
     */
    function key ()
    {
        return key($this->_values); 
    }

    /**
     +----------------------------------------------------------
     * 指针移动到下一个
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     */
    function next()
    {
        $this->_index ++;
        $this->_valid = (FALSE !== next($this->_values)); 
        //return $this->_valid;
    }

    /**
     +----------------------------------------------------------
     * 指针向上移动一位 PHP5的Iterator接口没有实现该方法
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     */
    function prev()
    {
        $this->_index --;
        $this->_valid = (FALSE !== prev($this->_values)); 
        //return $this->_valid;
    }

    /**
     +----------------------------------------------------------
     * 重置指针位置 回到开始位置
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     */
    function rewind()
    {
        $this->_index = 0;
        $this->_valid = (FALSE !== reset($this->_values)); 
    }

    /**
     +----------------------------------------------------------
     * 指针移动最后 PHP5的Iterator接口没有实现该方法
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     */
    function end()
    {
        $this->_index = count($this->_values)-1;
        $this->_valid = (FALSE !== end($this->_values)); 
    }

    /**
     +----------------------------------------------------------
     * 指针位置是否有效
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     */
    function valid()
    {
        return $this->_valid;
    }

}//类定义结束
?>