<?php 
// +---------------------------------------------------------------------------+
// | FCS -- Fast,Compatible & Simple OOP PHP Framework                         |
// +---------------------------------------------------------------------------+
// | Copyright (c) 2005-2006 liu21st.com.  All rights reserved.                |
// | Website: http://www.fcs.org.cn/                                           |
// | Author : Liu21st <liu21st@gmail.com>                                      |
// +---------------------------------------------------------------------------+
// | This program is free software; you can redistribute it and/or modify it   |
// | under the terms of the GNU General Public License as published by the     |
// | Free Software Foundation; either version 2 of the License,  or (at your   |
// | option) any later version.                                                |
// |                                                                           |
// | This program is distributed in the hope that it will be useful,  but      |
// | WITHOUT ANY WARRANTY; without even the implied warranty of                |
// | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General |
// | Public License for more details.                                          |
// +---------------------------------------------------------------------------+

/**
 +------------------------------------------------------------------------------
 * FCS
 +------------------------------------------------------------------------------
 * @package    Core
 * @link       http://www.fcs.org.cn
 * @copyright  Copyright (c) 2005-2006 liu21st.com.  All rights reserved. 
 * @author     liu21st <liu21st@gmail.com>
 * @version    $Id: Base.class.php 90 2006-11-11 08:26:44Z fcs $
 +------------------------------------------------------------------------------
 */

/**
 +------------------------------------------------------------------------------
 * 系统基类
 +------------------------------------------------------------------------------
 * @package   core
 * @author    liu21st <liu21st@gmail.com>
 * @version   0.8.0
 +------------------------------------------------------------------------------
 */
class Base
{

    /**
     +----------------------------------------------------------
     * 支持PHP4和PHP5的构造方法
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     */
    function Base()
    {
        if(version_compare(PHP_VERSION, '5.0.0', '<')){
            //让PHP4支持__construct和__destruct
            $args = func_get_args();
            if (method_exists($this, '__destruct'))
            {
               register_shutdown_function(array(&$this, '__destruct'));
            }
            if (method_exists($this, '__construct'))
                call_user_func_array(array(&$this, '__construct'), $args);
        }
    }

    /**
     +----------------------------------------------------------
     * 自动变量设置 PHP5支持
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @param $name 属性名称
     * @param $value  属性值
     +----------------------------------------------------------
     */
    function __set($name ,$value)
    {
        if(property_exists($this,$name)){
            $this->$name = $value;
        }
    }

    /**
     +----------------------------------------------------------
     * 自动变量获取 支持PHP5
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @param $name 属性名称
     +----------------------------------------------------------
     * @return mixed
     +----------------------------------------------------------
     */
    function __get($name)
    {
        if(property_exists($this,$name)){
            return $this->$name;
        }else {
            return null;
        }
    }

    /**
     +----------------------------------------------------------
     * 对象属性赋值
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @param $name 属性名称
     * @param $value  属性值
     +----------------------------------------------------------
     */
    function set($name ,$value)
    {
        $this->__set($name,$value);
    }

    /**
     +----------------------------------------------------------
     * 对象属性获取
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @param $name 属性名称
     +----------------------------------------------------------
     * @return mixed
     +----------------------------------------------------------
     */
    function get($name)
    {
        return $this->__get($name);
    }

    /**
     +----------------------------------------------------------
     * 返回对象的属性列表
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @return array
     +----------------------------------------------------------
     */
    function __varList()
    {
      return array_keys(get_object_vars($this));
    }

    /**
     +----------------------------------------------------------
     * 返回对象的属性数组
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @return array
     +----------------------------------------------------------
     */
    function __toArray()
    {
      return get_object_vars($this);
    }

    /**
     +----------------------------------------------------------
     * 返回对象初始化的属性数组
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @return array
     +----------------------------------------------------------
     */
    function __toOraArray()
    {
      return get_class_vars(get_class($this));
    }

    /**
     +----------------------------------------------------------
     * 返回对象的类名
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @return string
     +----------------------------------------------------------
     */
    function __toString()
    {
      return ucwords(get_class($this));
    }

    /**
     +----------------------------------------------------------
     * 返回对象属性数目
     * 
     +----------------------------------------------------------
     * @access public 
     +----------------------------------------------------------
     * @return string
     +----------------------------------------------------------
     */
    function __count()
    {
      return count(get_object_vars($this));
    }

    /**
     +----------------------------------------------------------
     * 缓存调用类的方法
     * 
     +----------------------------------------------------------
     * @static
     * @access public 
     +----------------------------------------------------------
     * @return mixed
     +----------------------------------------------------------
     */
    function __cacheCall(){
        static $_cacheFunction = array();
        $args   = func_get_args();
        $method = array_shift($args);
        $str    = md5($args);
        if(!isset($_cacheFunction[$str])){
            $_cacheFunction[$str] = call_user_func_array(array(&$this, $method), $args);
        }
        return $_cacheFunction[$str];
    }

    /**
     +----------------------------------------------------------
     * 自动调用类的方法，仅支持PHP5
     * 
     +----------------------------------------------------------
     * @static
     * @access public 
     +----------------------------------------------------------
     * @throws FcsException
     +----------------------------------------------------------
     */
    function __call( $func, $args )    
    {        
        throw_exception("方法[ $func ]不存在或参数有误！");        
    }

}//类定义结束
?>